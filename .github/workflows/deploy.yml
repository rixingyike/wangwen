name: Deploy HonKit to yishulun_blog

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install and build
        run: |
          npm install
          npx honkit build

      - name: Get repository name
        id: get-repo-name
        run: |
          REPO_NAME=$(basename "${{ github.repository }}")
          echo "repo_name=$REPO_NAME" >> $GITHUB_OUTPUT

      - name: Clone target repository
        run: |
          git clone "https://${{ secrets.EXTERNAL_REPOSITORY_PERSONAL_ACCESS_TOKEN }}@github.com/rixingyike/yishulun_blog_mdandcode.git" target-repo
        env:
          GITHUB_TOKEN: ${{ secrets.EXTERNAL_REPOSITORY_PERSONAL_ACCESS_TOKEN }}

      - name: Ensure ebook directory exists
        run: |
          mkdir -p target-repo/src/.vuepress/public/ebook

      - name: Sync built content
        run: |
          # 删除旧内容并复制新内容
          rm -rf "target-repo/src/.vuepress/public/ebook/${{ steps.get-repo-name.outputs.repo_name }}"
          cp -R _book "target-repo/src/.vuepress/public/ebook/${{ steps.get-repo-name.outputs.repo_name }}"

      - name: Commit and push changes
        run: |
          cd target-repo
          git config user.email "9830131@qq.com"
          git config user.name "GitHub Action"
          git add .
          git commit -m "chore: Update ${{ steps.get-repo-name.outputs.repo_name }} ebook content"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.EXTERNAL_REPOSITORY_PERSONAL_ACCESS_TOKEN }}